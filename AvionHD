# AvionHD
// Este Programa fue echo guiandose en 
//https://www.coursera.org/learn/introduccion-programacion-java/supplement/jEb3G/guia-de-trabajo-del-reto-del-avion

package Mundo;
// Avion de pasajeros

public class Avion
{
  public static final int SILLAS_EJECUTIVAS = 8;
  public static final int SILLAS_ECONOMICAS = 42;
  private Silla[] sillasEjecutivas;
  private Silla[] sillasEconomicas;
  public Avion()
  {
    sillasEjecutivas = new Silla[8];
    sillasEconomicas = new Silla[42];
    sillasEjecutivas[0] = new Silla(1, 1, 1);
    sillasEjecutivas[1] = new Silla(2, 1, 3);
    sillasEjecutivas[2] = new Silla(3, 1, 3);
    sillasEjecutivas[3] = new Silla(4, 1, 1);
    sillasEjecutivas[4] = new Silla(5, 1, 1);
    sillasEjecutivas[5] = new Silla(6, 1, 3);
    sillasEjecutivas[6] = new Silla(7, 1, 3);
    sillasEjecutivas[7] = new Silla(8, 1, 1);    
    int numSilla = 9; for (int j = 1; j <= 42; j++) {
      int ubicacion;
      if ((j % 6 == 1) || (j % 6 == 0)) {
        ubicacion = 1;
      } else {
        if ((j % 6 == 2) || (j % 6 == 5)) {
          ubicacion = 2;
        }
        else
          ubicacion = 3;
      }
      sillasEconomicas[(j - 1)] = new Silla(numSilla, 2, ubicacion);numSilla++;
    }
  }
  public Silla asignarSilla(int clase, int ubicacion, Pasajero pasajero)
  {
    Silla silla = null;
    if (clase == 1)
    {
      silla = buscarSillaEjecutivaLibre(ubicacion);
    }
    else if (clase == 2)
    {
      silla = buscarSillaEconomicaLibre(ubicacion);
    }
    if (silla != null)
    {
      silla.asignarAPasajero(pasajero);
    }
    return silla;
  }
  public Silla buscarSillaEjecutivaLibre(int ubicacion)
  {
    boolean encontrado = false;
    Silla silla = null;
    for (int i = 0; (i < 8) && (!encontrado); i++)
    {
      silla = sillasEjecutivas[i];
      if ((!silla.sillaAsignada()) && (silla.darUbicacion() == ubicacion))
      {
        encontrado = true;
      }
    }
    if (encontrado) {
      return silla;
    }
    return null;
  }
  public Silla buscarSillaEconomicaLibre(int ubicacion)
  {
    boolean encontrado = false;
    Silla silla = null;
    for (int i = 0; (i < 42) && (!encontrado); i++)
    {
      silla = sillasEconomicas[i];
      if ((!silla.sillaAsignada()) && (silla.darUbicacion() == ubicacion))
      {
        encontrado = true;
      }
    }
    if (encontrado) {
      return silla;
    }
    return null;
  }
public Silla buscarPasajero(Pasajero pasajero)
  {
    Silla silla = buscarPasajeroEjecutivo(pasajero);
    
    if (silla == null)
    {
      silla = buscarPasajeroEconomico(pasajero); }
    return silla;
  }
  public Silla buscarPasajeroEjecutivo(Pasajero pasajero)
  {
    boolean encontrado = false;
    Silla silla = null;
    for (int i = 0; (i < 8) && (!encontrado); i++)
    {
      silla = sillasEjecutivas[i];
      if ((silla.sillaAsignada()) && (silla.darPasajero().igualA(pasajero)))
      {
        encontrado = true;
      }
    }
    if (encontrado) {
      return silla;
    }
    return null;
  }
  public Silla buscarPasajeroEconomico(Pasajero pasajero)
  {
    boolean encontrado = false;
    Silla silla = null;
    for (int i = 0; (i < 42) && (!encontrado); i++)
    {
      silla = sillasEconomicas[i];
      if ((silla.sillaAsignada()) && (silla.darPasajero().igualA(pasajero)))
      {
        encontrado = true;
      }
    }
    if (encontrado) {
      return silla;
    }
    return null;
  }
  public boolean desasignarSilla(Pasajero pasajero)
  {
    Silla silla = buscarPasajero(pasajero);
    
    if (silla != null)
    {
      silla.desasignarSilla();
      return true;
    }
    
    return false;
  }
  public int contarSillasEjecutivasOcupadas()
  {
    int contador = 0;
    for (int i = 0; i < 8; i++)
    {
      if (sillasEjecutivas[i].sillaAsignada())
      {
        contador++;
      }
    }
    return contador;
  }
  public int contarSillasEconomicasOcupadas()
  {
    int contador = 0;
    for (int i = 0; i < 42; i++)
    {
      if (sillasEconomicas[i].sillaAsignada())
      {
        contador++;
      }
    }
    return contador;
  }
  public double calcularPorcentajeOcupacion()
  {
    int totalSillas = 50;
    int sillasOcupadas = contarSillasEconomicasOcupadas() + contarSillasEjecutivasOcupadas();
    double porcentaje = sillasOcupadas / totalSillas * 100.0D;
    return porcentaje;
  }
  public Silla[] obtenerSillasEjecutivas()
  {
    return sillasEjecutivas;
  }

  public Silla[] obtenerSillasEconomicas()
  {
    return sillasEconomicas;
  }
  public String metodo1()
  {
    return "respuesta 1";
  }
  public String metodo2()
  {
    return "respuesta 2";
  }
}

package Mundo;
public class Pasajero
{
  private int cedula;
  private String nombre;
  public Pasajero(int unaCedula, String unNombre)
  {
    cedula = unaCedula;
    nombre = unNombre;
  }
  public int darCedula()
  {
    return cedula;
  }
  public String darNombre()
  {
    return nombre;
  }
  public boolean igualA(Pasajero otroPasajero)
  {
    if (cedula == otroPasajero.darCedula()) {
      return true;
    }
    return false;
  }
}

package Mundo;

public class Silla
{
  public static final int CLASE_EJECUTIVA = 1;
  public static final int CLASE_ECONOMICA = 2;
  public static final int VENTANA = 1;
  public static final int CENTRAL = 2;
  public static final int PASILLO = 3;
  private int numero;
  private int clase;
  private int ubicacion;
  private Pasajero pasajero;
  public Silla(int unNumero, int unaClase, int unaUbicacion)
  {
    numero = unNumero;
    clase = unaClase;
    ubicacion = unaUbicacion;
    
    pasajero = null;
  }
  public void asignarAPasajero(Pasajero p)
  {
    pasajero = p;
  }
  public void desasignarSilla()
  {
    pasajero = null;
  }
  public boolean sillaAsignada()
  {
    if (pasajero == null) {
      return false;
    }
    return true;
  }
  boolean sillaAsignadaPasajero(Pasajero p)
  {
    if (pasajero == null)
      return false;
    if (pasajero.igualA(p)) {
      return true;
    }
    return false;
  }
  public int darNumero()
  {
    return numero;
  }
  public int darClase()
  {
    return clase;
  }
  public int darUbicacion()
  {
    return ubicacion;
  }
  public Pasajero darPasajero()
  {
    return pasajero;
  }
}
